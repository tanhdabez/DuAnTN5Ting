@using Controller.DTO;
@using Controller.Models
@using DemoBanQuanAo.Models

@inject HttpClient _httpclient;
@{
    // string customerName = "";
    IEnumerable < CustomerDto> _lst = await _httpclient.GetFromJsonAsync<List<CustomerDto>>("https://localhost:7299/api/Customer/all");
    // Customer customerData = new();
    // Address addressData = new();
    // async void saveCustomer(){


    //     var rs = await _httpclient.PostAsJsonAsync("https://localhost:7299/api/Customer/add", customerData); 
    //     if (rs.IsSuccessStatusCode)
    //     {
    //         Console.WriteLine("ok");
    //     }
    //     else 
    //         Console.WriteLine("not ok");
    // }
    // async bool CheckExistAddress(Address addressData)
    // {
    //     var rs = await _httpclient.GetFromJsonAsync<AddressDto>>("https://localhost:7299/api/Address/all");


    // }
}


<!-- Optional: Include Bootstrap and icons from CDN -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Bootstrap User Management Data Table</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto|Varela+Round">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">


    <style>
        body {
        color: #566787;
        background: #f5f5f5;
        font-family: 'Varela Round', sans-serif;
        font-size: 13px;
        }

        .table-responsive {
        margin: 30px 0;
        }

        .table-wrapper {
        min-width: 1000px;
        background: #fff;
        padding: 20px 25px;
        border-radius: 3px;
        box-shadow: 0 1px 1px rgba(0,0,0,.05);
        }

        .table-title {
        padding-bottom: 15px;
        background: #299be4;
        color: #fff;
        padding: 16px 30px;
        margin: -20px -25px 10px;
        border-radius: 3px 3px 0 0;
        }

        .table-title h2 {
        margin: 5px 0 0;
        font-size: 24px;
        }

        .table-title .btn {
        color: #566787;
        float: right;
        font-size: 13px;
        background: #fff;
        border: none;
        min-width: 50px;
        border-radius: 2px;
        border: none;
        outline: none !important;
        margin-left: 10px;
        }

        .table-title .btn:hover, .table-title .btn:focus {
        color: #566787;
        background: #f2f2f2;
        }

        .table-title .btn i {
        float: left;
        font-size: 21px;
        margin-right: 5px;
        }

        .table-title .btn span {
        float: left;
        margin-top: 2px;
        }

        table.table tr th, table.table tr td {
        border-color: #e9e9e9;
        padding: 12px 15px;
        vertical-align: middle;
        }

        table.table tr th:first-child {
        width: 60px;
        }

        table.table tr th:last-child {
        width: 100px;
        }

        table.table-striped tbody tr:nth-of-type(odd) {
        background-color: #fcfcfc;
        }

        table.table-striped.table-hover tbody tr:hover {
        background: #f5f5f5;
        }

        table.table th i {
        font-size: 13px;
        margin: 0 5px;
        cursor: pointer;
        }

        table.table th {
        font-size: 14px;
        text-align: center;
        }

        table.table td:last-child i {
        opacity: 0.9;
        font-size: 22px;
        margin: 0 5px;
        }

        table.table td a {
        font-weight: bold;
        color: #566787;
        display: inline-block;
        text-decoration: none;
        }

        table.table td a:hover {
        color: #2196F3;
        }

        table.table td a.settings {
        color: #2196F3;
        }

        table.table td a.delete {
        color: #F44336;
        }

        table.table td i {
        font-size: 19px;
        }

        table.table td {
        font-size: 14px;
        text-align: center;
        }

        table.table .avatar {
        border-radius: 50%;
        vertical-align: middle;
        margin-right: 10px;
        }

        .status {
        font-size: 30px;
        margin: 2px 2px 0 0;
        display: inline-block;
        vertical-align: middle;
        line-height: 10px;
        }

        .text-success {
        color: #10c469;
        }

        .text-info {
        color: #62c9e8;
        }

        .text-warning {
        color: #FFC107;
        }

        .text-danger {
        color: #ff5b5b;
        }

        .pagination {
        float: right;
        margin: 0 0 5px;
        }

        .pagination li a {
        border: none;
        font-size: 13px;
        min-width: 30px;
        min-height: 30px;
        color: #999;
        margin: 0 2px;
        line-height: 30px;
        border-radius: 2px !important;
        text-align: center;
        padding: 0 6px;
        }

        .pagination li a:hover {
        color: #666;
        }

        .pagination li.active a, .pagination li.active a.page-link {
        background: #03A9F4;
        }

        .pagination li.active a:hover {
        background: #0397d6;
        }

        .pagination li.disabled i {
        color: #ccc;
        }

        .pagination li i {
        font-size: 16px;
        padding-top: 6px
        }

        .hint-text {
        float: left;
        margin-top: 10px;
        font-size: 13px;
        }
    </style>
    <script>
        $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
        });
    </script>
</head>
<body>
    <div class="container-xl"> 
        <div class="table-responsive">
            <div class="table-wrapper">
                <div class="table-title">
                    <div class="row">
                        <div class="col-sm-5">
                            <h2>Quản Lý <b>Khách Hàng</b></h2>
                        </div>
                        <div class="col-sm-7">
                            <a href="#" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#addCustomerModal">
                                <i class="material-icons">&#xE147;</i>
                                <span>Tạo Khách Hàng</span>
                            </a>

                            <a href="#" class="btn btn-secondary"><i class="material-icons">&#xE24D;</i> <span>Xuất Excel</span></a>
                        </div>
                    </div>
                </div>
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>STT</th>
                            <th>Mã KH</th>
                            <th>Họ Tên</th>
                            <th>Số Điện Thoại</th>
                            <th>Email</th>
                            <th>Ngày Sinh</th>
                            <th>Giới Tính</th>
                            <th>Trạng Thái</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                            @{
                                int index = 1;
                            }
                            @foreach (var customer in _lst)
                            {
                                var primaryAddress = customer.Address.FirstOrDefault(a => a.IsPrimary);

                                <tr>
                                    <td>@index</td>
                                    <td>@customer.Ma</td>  
                                    <td>@customer.Ten</td>
                                    <td>@customer.SDT</td>
                                    <td>@customer.Email</td>
                                    <td>@customer.NgaySinh.ToString("dd/MM/yyyy")</td>
                                    <td>@customer.GioiTinh</td>\
                                    <td>@customer.TrangThai</td>
                                    <td class="text-center d-flex justify-content-center">
                                        <button class="btn btn-warning btn-sm" onclick="editCustomer('@customer.Id')">
                                            <i class="bi bi-pencil-square"></i>
                                        </button>
                                        <button onclick="deleteCustomer('@customer.Id')" class="btn btn-danger btn-sm">
                                            <i class="bi bi-trash-fill"></i>
                                        </button>
                                    </td>
                                </tr>
                                index ++;
                            }
                        </tbody>
                </table>
                <div class="clearfix">
                    <div class="hint-text">Showing <b>5</b> out of <b>25</b> entries</div>
                    <ul class="pagination">
                        <li class="page-item disabled"><a href="#">Trước</a></li>
                        <li class="page-item"><a href="#" class="page-link">1</a></li>
                        <li class="page-item"><a href="#" class="page-link">2</a></li>
                        <li class="page-item active"><a href="#" class="page-link">3</a></li>
                        <li class="page-item"><a href="#" class="page-link">4</a></li>
                        <li class="page-item"><a href="#" class="page-link">5</a></li>
                        <li class="page-item"><a href="#" class="page-link">Sau</a></li>
                    </ul>
                </div>
                <div class="modal fade" id="addCustomerModal" tabindex="-1" aria-labelledby="addCustomerModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="addCustomerModalLabel"><b>Thêm Khách Hàng</b></h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <!-- Form thêm khách hàng -->
                                <form id="addCustomerForm">
                                    <div class="mb-3">
                                        <label for="customerCode" class="form-label">Mã Khách Hàng</label>
                                        <input type="text" class="form-control" id="customerCode" placeholder="Nhập mã khách hàng">
                                    </div>
                                    <div class="mb-3">
                                        <label for="customerName" class="form-label">Họ Tên Khách Hàng</label>
                                        <input type="text" class="form-control" id="customerName" placeholder="Nhập họ tên khách hàng">
                                    </div>
                                    <div class="mb-3">
                                        <label for="customerPhone" class="form-label">Số Điện Thoại</label>
                                        <input type="text" class="form-control" id="customerPhone" placeholder="Nhập số điện thoại">
                                    </div>
                                    <div class="mb-3">
                                        <label for="customerEmail" class="form-label">Email</label>
                                        <input type="text" class="form-control" id="customerEmail" placeholder="Nhập email">
                                    </div>
                                    <div class="mb-3">
                                        <label for="customerPassword" class="form-label">Mật Khẩu</label>
                                        <input type="password" class="form-control" id="customerPassword" >
                                    </div>
                                    <div class="mb-3">
                                        <label for="customerBirth" class="form-label">Ngày Sinh</label>
                                        <input type="date" class="form-control" id="dateInput"/>
                                    </div>
                                    <div class="mb-3">
                                        <label for="customerImage" class="form-label">Ảnh</label>
                                        <input type="text" class="form-control" id="customerImage" placeholder="Nhập ảnh">
                                    </div>
                                    <div class="mb-3"> 
                                        <label for="customerGender" class="form-label">Giới Tính</label>
                                        <select id="customerGender" aria-label="Default select example" onchange="updateGender()">
                                            <option value="" placeholder hide>Nhấn để chọn</option>
                                            <option value="1">Nam</option>
                                            <option value="2">Nữ</option>
                                            <option value="3">Khác</option>
                                        </select>
                                    </div>
                                    <div class="mb-3">
                                        <span>Trạng Thái</span>
                                        <input type="radio" name="trangthai" id="active">
                                        <label for="active">Hoạt Động</label>
                                        <input type="radio" name="trangthai" id="inactive">
                                        <label for="inactive">Không Hoạt Động</label>
                                    </div>
                                    <div class="mb-3">
                                        <label for="customerAddress" class="form-label">Địa Chỉ</label>  
                                        <input type="text" class="form-control" id="tenPhuongXa" placeholder="Nhập tên phường xã"> <br />
                                        <input type="text" class="form-control" id="tenQuanHuyen" placeholder="Nhập tên quận huyện"> <br />
                                        <input type="text" class="form-control" id="tenTinh" placeholder="Nhập tên tỉnh">
                                    </div>
                                </form>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                                <button type="button" class="btn btn-primary" id="saveCustomerbtn" onclick="saveCustomer()">Lưu</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal fade" id="editCustomerModal" tabindex="-1" aria-labelledby="editCustomerModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="editCustomerModalLabel">Chỉnh Sửa Khách Hàng</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <form id="editCustomerForm">
                                    <input type="hidden" id="editCustomerId" />
                                    <div class="mb-3">
                                        <label for="editCustomerCode" class="form-label">Mã Khách Hàng</label>
                                        <input type="text" class="form-control" id="editCustomerCode" placeholder="Nhập mã khách hàng">
                                    </div>
                                    <div class="mb-3">
                                        <label for="editCustomerName" class="form-label">Họ Tên Khách Hàng</label>
                                        <input type="text" class="form-control" id="editCustomerName" placeholder="Nhập tên khách hàng">
                                    </div>
                                    <div class="mb-3">
                                        <label for="editCustomerPhone" class="form-label">Số Điện Thoại</label>
                                        <input type="text" class="form-control" id="editCustomerPhone" placeholder="Nhập số điện thoại">
                                    </div>
                                    <div class="mb-3">
                                        <label for="editCustomerEmail" class="form-label">Email</label>
                                        <input type="email" class="form-control" id="editCustomerEmail" placeholder="Nhập email">
                                    </div>
                                    <div class="mb-3">
                                        <label for="editCustomerBirth" class="form-label">Ngày Sinh</label>
                                        <input type="date" class="form-control" id="editCustomerBirth" />
                                    </div>
                                    <div class="mb-3">
                                        <label for="editCustomerImage" class="form-label">Ảnh</label>
                                        <input type="text" class="form-control" id="editCustomerImage" placeholder="Nhập ảnh">
                                    </div>
                                    <div class="mb-3">
                                        <label for="editCustomerGender" class="form-label">Giới Tính</label>
                                        <select id="editCustomerGender" aria-label="Default select example" onchange="updateGender()">
                                            <option value="" placeholder hide>Nhấn để chọn</option>
                                            <option value="1">Nam</option>
                                            <option value="2">Nữ</option>
                                            <option value="3">Khác</option>
                                        </select>
                                    </div>
                                    <div class="mb-3">
                                        <span>Trạng Thái</span>
                                        <input type="radio" name="editTrangthai" id="editActive">
                                        <label for="editActive">Hoạt Động</label>
                                        <input type="radio" name="editTrangthai" id="editInactive">
                                        <label for="editInactive">Không Hoạt Động</label>
                                    </div>
                                    <div class="mb-3">
                                        <label for="editcustomerAddress" class="form-label">Địa Chỉ</label>
                                        <input type="text" class="form-control" id="editTenPhuongXa" placeholder="Nhập tên phường xã"> <br />
                                        <input type="text" class="form-control" id="editTenQuanHuyen" placeholder="Nhập tên quận huyện"> <br />
                                        <input type="text" class="form-control" id="editTenTinh" placeholder="Nhập tên tỉnh">
                                    </div>
                                </form>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                                <button type="button" class="btn btn-primary" onclick="saveCustomerEdit()">Lưu Thay Đổi</button>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <script>

        var dateInput = document.getElementById('dateInput');
        dateInput.addEventListener('change', (event) => {
            const selectedDate = event.target.value;
            selectedDate == dateInput.value
        });
        

        var gender = "Chưa chọn";

        function updateGender() {
            const genderSelect = document.getElementById("customerGender").value;
            console.log("Selected value:", genderSelect);
            if (genderSelect === "1") {
                gender = "Nam";
            }
            else if (genderSelect === "2") {
                gender = "Nữ";
            }
            else if (genderSelect === "3") {
                gender = "Khác";
            }
            else {
                gender = "Chưa chọn";
            }
        }
        
        async function saveCustomer() {

            updateGender();
            // Lấy dữ liệu từ các input fields
            const customerData = {
                Id: "",
                Ma: document.getElementById("customerCode").value,
                Ten: document.getElementById("customerName").value,
                SDT: document.getElementById("customerPhone").value,
                Email: document.getElementById("customerEmail").value,
                MatKhau: document.getElementById("customerPassword").value,
                NgaySinh: dateInput.value,
                Anh: document.getElementById("customerImage").value,
                GioiTinh: gender,
                TrangThai: document.getElementById("active").checked ? "Hoạt Động" : "Không Hoạt Động",
                Address: [
                    {
                        Id: "",
                        TenPhuongXa: document.getElementById("tenPhuongXa").value,
                        TenQuanHuyen: document.getElementById("tenQuanHuyen").value,
                        TenTinh: document.getElementById("tenTinh").value,
                        IsPrimary: true
                    }
                ]
            };
            console.log(customerData);
            debugger
            try {
                // Gửi request POST đến API
                const response = await fetch('https://localhost:7299/api/Customer/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(customerData)
                });

                if (response.ok) {
                    alert("Khách hàng đã được thêm thành công!");
                    location.reload();  // Reload trang để cập nhật danh sách
                } else {
                    const errorMessage = await response.text();
                    alert("Thêm khách hàng thất bại: " + errorMessage);
                }
            } catch (error) {
                console.error("Lỗi khi gửi request:", error);
                alert("Có lỗi xảy ra khi thêm khách hàng.");
            }
        }

        async function editCustomer(Id) {
            debugger
            try {
                // Gửi request GET để lấy dữ liệu khách hàng từ API
                const response = await fetch(`https://localhost:7299/api/Customer/${Id}`);
                const customer = await response.json();
                console.log('Customer data:', customer);
                console.log('Customer data:', customer.ma);
                console.log('Customer data:', customer.ten);
                console.log('Customer data:', customer.sdt);
                console.log('Customer data:', customer.email);
                console.log('Customer data:', customer.ngaySinh);
                console.log('Customer data:', customer.anh);
                console.log('Customer data:', customer.gioiTinh);
                console.log('Customer data:', customer.trangThai);
                console.log('Customer data:', customer.address[0].tenPhuongXa);
                console.log('Customer data:', customer.address[0].tenQuanHuyen);
                console.log('Customer data:', customer.address[0].tenTinh);

                // Điền dữ liệu vào các trường của modal
                document.getElementById("editCustomerId").value = customer.id;
                document.getElementById("editCustomerCode").value = customer.ma;
                document.getElementById("editCustomerName").value = customer.ten;
                document.getElementById("editCustomerPhone").value = customer.sdt;
                document.getElementById("editCustomerEmail").value = customer.email;
                document.getElementById("editCustomerBirth").value = customer.ngaySinh;
                document.getElementById("editCustomerImage").value = customer.anh;
                const genderSelect = document.getElementById("editCustomerGender");
                if (customer.gioiTinh === "Nam") {
                    genderSelect.value = "1";
                } else if (customer.gioiTinh === "Nữ") {
                    genderSelect.value = "2";
                } else if (customer.gioiTinh === "Khác") {
                    genderSelect.value = "3";
                } else {
                    genderSelect.value = "";
                }
                if (customer.trangThai === "Hoạt Động") {
                    document.getElementById("editActive").checked = true;
                } else if (customer.trangThai === "Không Hoạt Động") {
                    document.getElementById("editInactive").checked = true;
                }

                // Địa chỉ
                if (customer.address && customer.address.length > 0) {
                    document.getElementById("editTenPhuongXa").value = customer.address[0].tenPhuongXa;
                    document.getElementById("editTenQuanHuyen").value = customer.address[0].tenQuanHuyen;
                    document.getElementById("editTenTinh").value = customer.address[0].tenTinh;
                }
                debugger

                // Mở modal
                $('#editCustomerModal').modal('show');
            } catch (error) {
                console.error("Lỗi khi tải dữ liệu khách hàng:", error);
                alert("Không thể tải thông tin khách hàng.");
            }
        }

        async function saveCustomerEdit(Id) {
            updateGender();  // Cập nhật giá trị của biến gender từ lựa chọn của người dùng
            const customerId = document.getElementById("editCustomerId").value;

            const customerData = {
                Id: Id,
                Ma: document.getElementById("editCustomerCode").value,
                Ten: document.getElementById("editCustomerName").value,
                SDT: document.getElementById("editCustomerPhone").value,
                Email: document.getElementById("editCustomerEmail").value,
                NgaySinh: dateInput.value,
                Anh: document.getElementById("editCustomerImage").value,
                GioiTinh: gender,
                TrangThai: document.getElementById("editActive").checked ? "Hoạt Động" : "Không Hoạt Động",
                Address: [
                    {
                        Id: "",
                        TenPhuongXa: document.getElementById("editTenPhuongXa").value,
                        TenQuanHuyen: document.getElementById("editTenQuanHuyen").value,
                        TenTinh: document.getElementById("editEenTinh").value,
                        IsPrimary: true
                    }
                ]
            };

            try {
                const response = await fetch(`https://localhost:7299/api/Customer/update/${Id}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(customerData)
                });

                if (response.ok) {
                    alert("Thông tin khách hàng đã được cập nhật thành công!");
                    location.reload();
                } else {
                    const errorMessage = await response.text();
                    alert("Cập nhật khách hàng thất bại: " + errorMessage);
                }
            } catch (error) {
                console.error("Lỗi khi gửi request:", error);
                alert("Có lỗi xảy ra khi cập nhật khách hàng.");
            }
        }

        async function deleteCustomer(Id) {
            if (!confirm("Bạn có chắc chắn muốn xoá khách hàng này")) {
                return;
            }

            try {
                const response = await fetch(`https://localhost:7299/api/Customer/${Id}`, {
                    method: 'DELETE'
                });

                if (response.ok) {
                    alert("Khách hàng đã được xoá thành công!");
                    location.reload(); // Reload to update the customer list
                } else {
                    const errorMessage = await response.text();
                    alert("Xoá khách hàng thất bại: " + errorMessage);
                }
            } catch (error) {
                console.error("Lỗi khi gửi request:", error);
                alert("Có lỗi xảy ra khi xoá khách hàng.");
            }
        }

    </script>
</body>
</html>


