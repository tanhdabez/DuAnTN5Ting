@using AppData.ViewModels.SanPham;
@model List<GioHangRequest>
@{
    Layout = "_Layout";
    string? temp = TempData.Peek("TongTien") as string;
    string tongTien = temp == null ? "0" : temp;
}

<!-- Breadcrumb Section Begin -->
<style>
    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
    }

    .form-check-input {
        width: 20px;
        height: 20px;
        border-radius: 4px;
        border: 2px solid #6c757d;
        transition: box-shadow 0.2s ease-in-out, background-color 0.2s ease-in-out;
    }

    .form-check-input:checked {
            background-color: #007bff;
            border-color: #007bff;
        }

    .form-check-input:hover {
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
        }
</style>
<section class="breadcrumb-option">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb__text">
                    <h4>Giỏ hàng</h4>
                    <div class="breadcrumb__links">
                        <a href="https://localhost:5001/">Trang chủ</a>
                        <a href="https://localhost:5001/Home/Shop">Cửa hàng</a>
                        <span>Giỏ hàng</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Breadcrumb Section End -->
<!-- Shopping Cart Section Begin -->
<section class="shopping-cart spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-8">
                <div class="shopping__cart__table">
                    <table>
                        <thead>
                            <tr>
                                <th>
                                </th>
                                <th>Sản phẩm</th>
                                <th>Giá bán</th>
                                <th>Số lượng</th>
                                <th>Tổng cộng</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                    </td>
                                    <td class="product__cart__item">
                                        <div class="product__cart__item__pic">
                                            <a asp-controller="Home" asp-action="ProductDetailFromCart" asp-route-idctsp="@item.IDChiTietSanPham"><img style="height:120px;width:100px" src="/img/product/@item.Anh" alt=""></a>
                                        </div>
                                        <div class="product__cart__item__text">
                                            <h6>@item.Ten</h6>
                                            <h5>@item.MauSac/@item.KichCo</h5>
                                            <p id="validate_@item.IDChiTietSanPham" style="display:none;color:red;font-size:10px"></p>
                                        </div>
                                    </td>
                                    <td class="cart__price">@item.DonGia.Value.ToString("n0").Replace(',', '.') </td>
                                    <td class="quantity__item">
                                        <div class="quantity">
                                            <div class="pro-qty-2">
                                                <input class="soLuongCart" style="-webkit-appearance:none;" name="@item.IDChiTietSanPham" type="number" value="@item.SoLuong">
                                            </div>
                                        </div>
                                    </td>
                                    <td style="color: #111111; font-size: 18px; font-weight: 700; width: 140px;" class="cart__price__sub">@((item.DonGia.Value * item.SoLuong).ToString("n0").Replace(',', '.')) </td>
                                    <td class="cart__close"><a asp-controller="Home" asp-action="DeleteFromCart" asp-route-id="@item.IDChiTietSanPham"><i class="fa fa-close"></i></a></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="row">
                    <div class="col-lg-6 col-md-6 col-sm-6">
                        <div class="continue__btn">
                            <a href="https://localhost:5001/Home/Shop">Tiếp tục mua sắm</a>
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6">
                    </div>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="cart__total">
                    <h6>Tổng số giỏ hàng</h6>
                    <ul>
                        <li>Tổng <span id="SubTotal">@Convert.ToInt32(tongTien).ToString("n0") VNĐ</span></li>
                    </ul>
                    <a onclick="CheckCart()" href="#" class="primary-btn">Mua hàng</a>
                </div>
            </div>
        </div>
    </div>
</section>
<script src="/js/jquery-3.3.1.min.js"></script>
<script>
    var checkSoLuong = [];
    $(document).ready(function () {
        UpdateCart();
        document.getElementById("SubTotal").innerHTML = Intl.NumberFormat().format(@tongTien) + " VNĐ"
    });
   
    function UpdateCart() {
        var dl = document.getElementsByClassName("soLuongCart");
        var lst = [];
        var tongtien = 0;

        for (var i = 0; i < dl.length; i++) {
            var input = dl[i];
            var maxSoLuong = parseInt(input.getAttribute("data-max")); // Lấy tồn kho từ thuộc tính data-max
            var currentValue = parseInt(input.value);

            // Kiểm tra giá trị nhập vào có vượt quá tồn kho
            if (currentValue > maxSoLuong) {
                input.value = maxSoLuong; // Đặt lại giá trị input nếu vượt quá tồn kho
            }

            // Lấy giá trị thực tế sau khi chỉnh sửa
            var validValue = parseInt(input.value);

            // Cập nhật danh sách để gửi lên server
            lst.push(input.name + validValue);

            // Cập nhật tổng tiền tạm tính
            var donGia = parseInt(input.closest("tr").querySelector(".cart__price").innerText.replaceAll(".", ""));
            tongtien += validValue * donGia;

            // Cập nhật giá trị "Tổng cộng" của từng sản phẩm trên UI
            var subCartPrice = input.closest("tr").querySelector(".cart__price__sub");
            subCartPrice.innerText = Intl.NumberFormat().format(validValue * donGia).replaceAll(".", "") + " VNĐ";
        }

        // Cập nhật tổng tiền trên giao diện
        document.getElementById("SubTotal").innerHTML = Intl.NumberFormat().format(tongtien) + " VNĐ";

        // Gửi dữ liệu cập nhật lên server
        var postData = { dssl: lst };
        $.ajax({
            async: true,
            type: 'POST',
            dataType: "json",
            data: postData,
            url: '/Home/UpdateCart',
            success: function (response) {
                if (response.success) {
                    // Cập nhật thêm nếu cần
                    $('#tongsoluong').text(response.cout);
                    if (response.data.length > 0) {
                        for (let item of response.data) {
                            var validateElement = document.getElementById("validate_" + item.idChiTietSanPham);
                            var input = document.querySelector(`.soLuongCart[name="${item.idChiTietSanPham}"]`);

                            if (input) {
                                // Gán lại tồn kho cho thuộc tính data-max
                                   input.setAttribute("data-max", Math.min(item.soLuongConLai, 15));
                        
                                // Thêm điều kiện giới hạn tối đa 15 sản phẩm
                                   input.setAttribute("max", 15);
                            }

                            if (item.hetHang) {
                                // Hiển thị thông báo hết hàng
                                if (validateElement) {
                                    validateElement.style.display = "none";
                                }
                                if (item.soLuongConLai <= 5) {
                                    if (validateElement) {
                                        validateElement.innerHTML = `Chỉ còn ${item.soLuongConLai} sản phẩm`;
                                        validateElement.style.display = "block";
                                    }
                            }
                            } else {
                                if (item.soLuongConLai <= 5) {
                                    if (validateElement) {
                                        validateElement.innerHTML = `Chỉ còn ${item.soLuongConLai} sản phẩm`;
                                        validateElement.style.display = "block";
                                    }
                                    if (item.soLuongConLai == 0) {
                                        if (validateElement) {
                                            validateElement.innerHTML = `Sản phẩm đã hết hàng`;
                                            validateElement.style.display = "block";
                                        }
                                    }
                                }
                            }
                        }
                        checkSoLuong = response.data.filter(x => x.hetHang == false).length <= 0;
                    }
                } else {
                    toastr.error(response.message, 'Error Alert', { timeOut: 300 });
                }
            },
            error: function (response) {
                console.error(response);
                toastr.error(response.message, 'Error Alert', { timeOut: 300 });
            }
        });
    }

    function CheckCart() {

        if (@Model.Count == 0) {
            alert("Vui lòng thêm sản phẩm vào giỏ hàng");
        }
        else if (checkSoLuong == false) {
            alert("Yêu cầu không thể đáp ứng");
        }
        else {
            location.href = 'CheckOut';
        }
    }

</script>
<!-- Shopping Cart Section End -->




<!-- comment dự phòng -->
    @*  function UpdateCart() {
        var dl = document.getElementsByClassName("soLuongCart");
        var lst = [];
        for (var i = 0; i < dl.length; i++) {
            lst.push(dl[i].name + dl[i].value)
        }
        var postData = { dssl: lst };
        $.ajax({
            async: true,
            type: 'POST',
            dataType: "json",
            data: postData,
            url: '/Home/UpdateCart',
            success: function (response) {
                if (response.success == true) {
                    var subCart = document.getElementsByClassName("cart__price__sub");
                    var tongtien = 0;
                    for (var i = 0; i < subCart.length; i++) {
                        var tongTienHang = subCart[i].innerHTML.replaceAll(".", "");
                        tongTienHang = tongTienHang.replaceAll(",", "");
                        tongtien += parseInt(tongTienHang);
                    }
                    document.getElementById("SubTotal").innerHTML = Intl.NumberFormat().format(tongtien) + "VNĐ";
                    if (response.data.length > 0) {
                        for (let i = 0; i < response.data.length; i++) {
                            if (response.data[i].hetHang) {
                                document.getElementById("validate_" + response.data[i].idChiTietSanPham).style.display = "none";
                            } else {
                                 // Ẩn thông báo nếu sản phẩm có hàng
                                document.getElementById("validate_" + response.data[i].idChiTietSanPham).style.display = "block";
                            }
                        }
                    }
                    checkSoLuong = response.data.filter(x => x.hetHang == false).length <= 0;
                    $('#tongsoluong').text(response.cout);
                } else {
                    toastr.error(response.message, 'Error Alert', { timeOut: 300 });
                }
            },
            error: function (response) {
                console.log(response);
                toastr.error(response.message, 'Error Alert', { timeOut: 300 });
            }
        });
    }
    function UpdateCart() {
        var dl = document.getElementsByClassName("soLuongCart");
        var lst = [];
        for (var i = 0; i < dl.length; i++) {
            var input = dl[i];
            var maxSoLuong = parseInt(input.getAttribute("data-max")); // Lấy tồn kho từ thuộc tính data-max

            if (parseInt(input.value) > maxSoLuong) {
                // Đặt lại giá trị input về số lượng tồn kho
                input.value = maxSoLuong;
            }

            // Đẩy dữ liệu vào lst với giá trị đã được cập nhật trên giao diện
            lst.push(input.name + input.value);
        }
        var postData = { dssl: lst };

        $.ajax({
            async: true,
            type: 'POST',
            dataType: "json",
            data: postData,
            url: '/Home/UpdateCart',
            success: function (response) {
                if (response.success == true) {
                    var subCart = document.getElementsByClassName("cart__price__sub");
                    var tongtien = 0;

                    // Tính tổng tiền giỏ hàng
                    for (var i = 0; i < subCart.length; i++) {
                        var tongTienHang = subCart[i].innerHTML.replaceAll(".", "").replaceAll(",", "");
                        tongtien += parseInt(tongTienHang);
                    }

                    // Cập nhật tổng tiền
                    document.getElementById("SubTotal").innerHTML = Intl.NumberFormat().format(tongtien) + " VNĐ";

                    if (response.data.length > 0) {
                        for (let i = 0; i < response.data.length; i++) {
                            var item = response.data[i];
                            var validateElement = document.getElementById("validate_" + item.idChiTietSanPham);

                            var input = document.querySelector(`.soLuongCart[name="${item.idChiTietSanPham}"]`);
                            if (input) {
                                // Gán giá trị tồn kho cho thuộc tính data-max
                                input.setAttribute("data-max", item.soLuongConLai);
                            }
                            if (item.hetHang) {
                                // KO Hiển thị thông báo hết hàng
                                if (validateElement) {
                                    validateElement.style.display = "none";
                                }
                                if (item.soLuongConLai <= 5) {
                                    if (validateElement) {
                                        validateElement.innerHTML = `Chỉ còn ${item.soLuongConLai} sản phẩm`;
                                        validateElement.style.display = "block";
                                    }
                                }
                            }
                            else {
                                // Hiển thị thông báo hết hàng
                                if (validateElement) {
                                    validateElement.innerHTML = `Sản phẩm đã hết hàng`;
                                    validateElement.style.display = "block";
                                }

                            }
                            // Kiểm tra số lượng nhập vượt tồn kho
                            // if (item.soLuong > item.soLuongConLai) {
                            //     if (input)
                            //     {
                            //         input.value = item.soLuongConLai;
                            //     }
                            // }
                        }
                    }

                    // Kiểm tra trạng thái giỏ hàng
                    checkSoLuong = response.data.filter(x => x.hetHang == false).length <= 0;

                    // Cập nhật tổng số lượng sản phẩm
                    $('#tongsoluong').text(response.cout);
                } else {
                    toastr.error(response.message, 'Error Alert', { timeOut: 300 });
                }
            },
            error: function (response) {
                console.log(response);
                toastr.error(response.message, 'Error Alert', { timeOut: 300 });
            }
        });
    } *@
<!--Dự Phòng-->